; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	G:\Projects\Lotion\Lotion\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?event@@3TSDL_Event@@A				; event
PUBLIC	?context@@3PAXA					; context
PUBLIC	?isRunning@@3_NA				; isRunning
PUBLIC	?frameStart@@3HA				; frameStart
PUBLIC	?frameEnd@@3HA					; frameEnd
PUBLIC	?deltaTime@@3HA					; deltaTime
_BSS	SEGMENT
?event@@3TSDL_Event@@A DB 038H DUP (?)			; event
?context@@3PAXA DD 01H DUP (?)				; context
?frameStart@@3HA DD 01H DUP (?)				; frameStart
?frameEnd@@3HA DD 01H DUP (?)				; frameEnd
?deltaTime@@3HA DD 01H DUP (?)				; deltaTime
_BSS	ENDS
_DATA	SEGMENT
?isRunning@@3_NA DB 01H					; isRunning
_DATA	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	_SDL_main
PUBLIC	?Update@@YAXH@Z					; Update
PUBLIC	?Render@@YAXPAUSDL_Window@@PAX@Z		; Render
PUBLIC	?joiner@@3VJoiner@@A				; joiner
PUBLIC	??_C@_06OKBDLGLB@Lotion?$AA@			; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4072c00000000000
PUBLIC	__real@4079000000000000
PUBLIC	__real@c072c00000000000
PUBLIC	__real@c079000000000000
EXTRN	_SDL_CreateWindow:PROC
EXTRN	_SDL_GL_CreateContext:PROC
EXTRN	_SDL_GL_MakeCurrent:PROC
EXTRN	_SDL_GL_SwapWindow:PROC
EXTRN	_SDL_PollEvent:PROC
EXTRN	_SDL_GetTicks:PROC
EXTRN	_SDL_Delay:PROC
EXTRN	__imp__glClear@4:PROC
EXTRN	__imp__glMatrixMode@4:PROC
EXTRN	__imp__glOrtho@48:PROC
EXTRN	?GetKeys@@YAXTSDL_Event@@@Z:PROC		; GetKeys
EXTRN	?RemoveInitialPress@@YAXXZ:PROC			; RemoveInitialPress
EXTRN	??0Joiner@@QAE@XZ:PROC				; Joiner::Joiner
EXTRN	?LoadContent@Joiner@@QAEXXZ:PROC		; Joiner::LoadContent
EXTRN	?Update@Joiner@@QAEXH@Z:PROC			; Joiner::Update
EXTRN	?Render@Joiner@@QAEXXZ:PROC			; Joiner::Render
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?displayWindow@@3PAUSDL_Window@@A DD 01H DUP (?)	; displayWindow
?joiner@@3VJoiner@@A DB 01H DUP (?)			; joiner
_BSS	ENDS
CRT$XCU	SEGMENT
?joiner$initializer$@@3P6AXXZA DD FLAT:??__Ejoiner@@YAXXZ ; joiner$initializer$
CRT$XCU	ENDS
;	COMDAT __real@c079000000000000
CONST	SEGMENT
__real@c079000000000000 DQ 0c079000000000000r	; -400
CONST	ENDS
;	COMDAT __real@c072c00000000000
CONST	SEGMENT
__real@c072c00000000000 DQ 0c072c00000000000r	; -300
CONST	ENDS
;	COMDAT __real@4079000000000000
CONST	SEGMENT
__real@4079000000000000 DQ 04079000000000000r	; 400
CONST	ENDS
;	COMDAT __real@4072c00000000000
CONST	SEGMENT
__real@4072c00000000000 DQ 04072c00000000000r	; 300
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_06OKBDLGLB@Lotion?$AA@
CONST	SEGMENT
??_C@_06OKBDLGLB@Lotion?$AA@ DB 'Lotion', 00H		; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File g:\projects\lotion\lotion\main.cpp
;	COMDAT ??__Ejoiner@@YAXXZ
text$di	SEGMENT
??__Ejoiner@@YAXXZ PROC					; `dynamic initializer for 'joiner'', COMDAT

; 9    : Joiner joiner;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?joiner@@3VJoiner@@A	; joiner
	call	??0Joiner@@QAE@XZ			; Joiner::Joiner
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Ejoiner@@YAXXZ ENDP					; `dynamic initializer for 'joiner''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File g:\projects\lotion\lotion\main.cpp
;	COMDAT ?Render@@YAXPAUSDL_Window@@PAX@Z
_TEXT	SEGMENT
_window$ = 8						; size = 4
_context$ = 12						; size = 4
?Render@@YAXPAUSDL_Window@@PAX@Z PROC			; Render, COMDAT

; 49   : void Render(SDL_Window* window, SDL_GLContext context) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 50   : 	SDL_GL_MakeCurrent(window, context);

	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _window$[ebp]
	push	ecx
	call	_SDL_GL_MakeCurrent
	add	esp, 8

; 51   : 	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

	mov	esi, esp
	push	16640					; 00004100H
	call	DWORD PTR __imp__glClear@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 52   : 	glMatrixMode(GL_PROJECTION);

	mov	esi, esp
	push	5889					; 00001701H
	call	DWORD PTR __imp__glMatrixMode@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 53   : 
; 54   : 	joiner.Render();

	mov	ecx, OFFSET ?joiner@@3VJoiner@@A	; joiner
	call	?Render@Joiner@@QAEXXZ			; Joiner::Render

; 55   : 
; 56   : 	SDL_GL_SwapWindow(window);

	mov	eax, DWORD PTR _window$[ebp]
	push	eax
	call	_SDL_GL_SwapWindow
	add	esp, 4

; 57   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Render@@YAXPAUSDL_Window@@PAX@Z ENDP			; Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File g:\projects\lotion\lotion\main.cpp
;	COMDAT ?Update@@YAXH@Z
_TEXT	SEGMENT
_gameTime$ = 8						; size = 4
?Update@@YAXH@Z PROC					; Update, COMDAT

; 45   : void Update(int gameTime) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 46   : 	joiner.Update(gameTime);

	mov	eax, DWORD PTR _gameTime$[ebp]
	push	eax
	mov	ecx, OFFSET ?joiner@@3VJoiner@@A	; joiner
	call	?Update@Joiner@@QAEXH@Z			; Joiner::Update

; 47   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Update@@YAXH@Z ENDP					; Update
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File g:\projects\lotion\lotion\main.cpp
;	COMDAT _SDL_main
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_SDL_main PROC						; COMDAT

; 13   : int main(int argc, char *argv[]) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 14   : 	displayWindow = SDL_CreateWindow("Lotion", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, SCREENWIDTH, SCREENHEIGHT, SDL_WINDOW_OPENGL);

	push	2
	push	600					; 00000258H
	push	800					; 00000320H
	push	805240832				; 2fff0000H
	push	805240832				; 2fff0000H
	push	OFFSET ??_C@_06OKBDLGLB@Lotion?$AA@
	call	_SDL_CreateWindow
	add	esp, 24					; 00000018H
	mov	DWORD PTR ?displayWindow@@3PAUSDL_Window@@A, eax

; 15   : 	context = SDL_GL_CreateContext(displayWindow);

	mov	eax, DWORD PTR ?displayWindow@@3PAUSDL_Window@@A
	push	eax
	call	_SDL_GL_CreateContext
	add	esp, 4
	mov	DWORD PTR ?context@@3PAXA, eax		; context

; 16   : 	glOrtho(-SCREENWIDTH / 2, SCREENWIDTH / 2, SCREENHEIGHT / 2, -SCREENHEIGHT / 2, 0, 1);

	mov	esi, esp
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@0000000000000000
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@c072c00000000000
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@4072c00000000000
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@4079000000000000
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@c079000000000000
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp__glOrtho@48
	cmp	esi, esp
	call	__RTC_CheckEsp

; 17   : 
; 18   : 	joiner.LoadContent();

	mov	ecx, OFFSET ?joiner@@3VJoiner@@A	; joiner
	call	?LoadContent@Joiner@@QAEXXZ		; Joiner::LoadContent
$LN2@SDL_main:

; 19   : 
; 20   : 	while (isRunning) {

	movzx	eax, BYTE PTR ?isRunning@@3_NA		; isRunning
	test	eax, eax
	je	$LN3@SDL_main

; 21   : 		RemoveInitialPress();

	call	?RemoveInitialPress@@YAXXZ		; RemoveInitialPress
$LN4@SDL_main:

; 22   : 		while (SDL_PollEvent(&event)) {

	push	OFFSET ?event@@3TSDL_Event@@A		; event
	call	_SDL_PollEvent
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@SDL_main

; 23   : 			if (event.type == SDL_QUIT)

	cmp	DWORD PTR ?event@@3TSDL_Event@@A, 256	; 00000100H
	jne	SHORT $LN6@SDL_main

; 24   : 				isRunning = false;

	mov	BYTE PTR ?isRunning@@3_NA, 0		; isRunning
$LN6@SDL_main:

; 25   : 
; 26   : 			GetKeys(event);

	sub	esp, 56					; 00000038H
	mov	ecx, 14					; 0000000eH
	mov	esi, OFFSET ?event@@3TSDL_Event@@A	; event
	mov	edi, esp
	rep movsd
	call	?GetKeys@@YAXTSDL_Event@@@Z		; GetKeys
	add	esp, 56					; 00000038H

; 27   : 		}

	jmp	SHORT $LN4@SDL_main
$LN5@SDL_main:

; 28   : 
; 29   : 		if (deltaTime < 1 / 60) {

	cmp	DWORD PTR ?deltaTime@@3HA, 0		; deltaTime
	jge	SHORT $LN7@SDL_main

; 30   : 			frameStart = SDL_GetTicks();

	call	_SDL_GetTicks
	mov	DWORD PTR ?frameStart@@3HA, eax		; frameStart

; 31   : 			SDL_Delay(1);

	push	1
	call	_SDL_Delay
	add	esp, 4

; 32   : 			frameEnd = SDL_GetTicks();

	call	_SDL_GetTicks
	mov	DWORD PTR ?frameEnd@@3HA, eax		; frameEnd

; 33   : 			deltaTime = frameEnd - frameStart;

	mov	eax, DWORD PTR ?frameEnd@@3HA		; frameEnd
	sub	eax, DWORD PTR ?frameStart@@3HA		; frameStart
	mov	DWORD PTR ?deltaTime@@3HA, eax		; deltaTime
$LN7@SDL_main:

; 34   : 		}
; 35   : 		frameStart = SDL_GetTicks();

	call	_SDL_GetTicks
	mov	DWORD PTR ?frameStart@@3HA, eax		; frameStart

; 36   : 		Update(deltaTime);

	mov	eax, DWORD PTR ?deltaTime@@3HA		; deltaTime
	push	eax
	call	?Update@@YAXH@Z				; Update
	add	esp, 4

; 37   : 		Render(displayWindow, context);

	mov	eax, DWORD PTR ?context@@3PAXA		; context
	push	eax
	mov	ecx, DWORD PTR ?displayWindow@@3PAUSDL_Window@@A
	push	ecx
	call	?Render@@YAXPAUSDL_Window@@PAX@Z	; Render
	add	esp, 8

; 38   : 		frameEnd = SDL_GetTicks();

	call	_SDL_GetTicks
	mov	DWORD PTR ?frameEnd@@3HA, eax		; frameEnd

; 39   : 		deltaTime = frameEnd - frameStart;

	mov	eax, DWORD PTR ?frameEnd@@3HA		; frameEnd
	sub	eax, DWORD PTR ?frameStart@@3HA		; frameStart
	mov	DWORD PTR ?deltaTime@@3HA, eax		; deltaTime

; 40   : 	}

	jmp	$LN2@SDL_main
$LN3@SDL_main:

; 41   : 
; 42   : 	return 0;

	xor	eax, eax

; 43   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SDL_main ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File g:\projects\lotion\lotion\main.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

; 58   : }

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File g:\projects\lotion\lotion\main.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

; 58   : }

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
